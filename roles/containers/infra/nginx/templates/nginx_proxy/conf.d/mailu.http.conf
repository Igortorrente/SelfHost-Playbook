# Main HTTP server
server {
    listen 443      ssl http2;
    listen [::]:443 ssl http2;

    server_name mail.{{ server['network']['domain_name'] }} www.mail.{{ server['network']['domain_name'] }}
                autoconfig.{{ mailu["mail_domain"] }} autodiscover.{{ mailu["mail_domain"] }};

    include /etc/nginx/templates/ssl.tmpl;
    include /etc/nginx/templates/misc.tmpl;

    access_log /var/log/nginx/mailu.access.log combined if=$mailu_loggable;
    error_log /var/log/nginx/mailu.error.log warn;

    # Variables for proxifying
    set $admin {{ containers['loopback_network_address'] }}:10102;
    set $antispam {{ containers['loopback_network_address'] }}:11334;
{% if mailu['roundcube']['enabled'] is true %}
    set $webmail {{ containers['loopback_network_address'] }}:10101;
{% endif %}
    client_max_body_size 58388608;

    # Remove headers to prevent duplication and information disclosure
    proxy_hide_header X-XSS-Protection;
    proxy_hide_header X-Powered-By;

    add_header X-Frame-Options 'SAMEORIGIN';
    add_header X-Content-Type-Options 'nosniff';
    add_header X-Permitted-Cross-Domain-Policies 'none';
    add_header Referrer-Policy 'same-origin';

    # mozilla autoconfiguration
    location ~ ^/(\.well\-known/autoconfig/)?mail/config\-v1\.1\.xml {
        rewrite ^ /internal/autoconfig/mozilla break;
        include /etc/nginx/templates/mailu_proxy.tmpl;

        proxy_pass http://$admin;
    }

    # microsoft autoconfiguration
    location ~* ^/(?:a|A)utodiscover/(?:a|A)utodiscover.json {
        include /etc/nginx/templates/mailu_proxy.tmpl;
        rewrite ^ /internal/autoconfig/microsoft.json break;

        proxy_pass http://$admin;
    }

    location ~* ^/(?:a|A)utodiscover/(?:a|A)utodiscover.xml {
        include /etc/nginx/templates/mailu_proxy.tmpl;
        rewrite ^ /internal/autoconfig/microsoft break;

        proxy_pass http://$admin;
    }

    # apple mobileconfig
    location ~ ^/(apple\.)?mobileconfig {
        include /etc/nginx/templates/mailu_proxy.tmpl;
        rewrite ^ /internal/autoconfig/apple break;

        proxy_pass http://$admin;
    }

    location ~ ^/(sso|static)/ {
        #include /etc/nginx/templates/mailu_proxy.tmpl;
{% if mailu['OIDC']['enabled'] is true %}
        auth_request /oauth2/auth;

        auth_request_set $email  $upstream_http_x_auth_request_email;
        proxy_set_header X-Email $email;
        auth_request_set $user  $upstream_http_x_auth_request_user;
        proxy_set_header X-User  $user;
        auth_request_set $token  $upstream_http_x_auth_request_access_token;
        proxy_set_header X-Access-Token $token;
        auth_request_set $auth_cookie $upstream_http_set_cookie;
        add_header Set-Cookie $auth_cookie;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host:443;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;

        proxy_http_version 1.1;

        access_log /var/log/nginx/oauth2-proxy.access.log;
        error_log /var/log/nginx/oauth2-proxy.error.log debug;
{% endif %}

        proxy_pass http://$admin;
    }

    location @sso_login {
        return 302 /sso/login?url=$request_uri;
    }

    location / {
{% if mailu['OIDC']['enabled'] is true %}
        try_files $uri /sso/login;
{% elif mailu['roundcube']['enabled'] is true %}
        try_files $uri /webmail?homepage;
{% else %}
        try_files $uri /sso/login;
{% endif %}
    }

{% if mailu['roundcube']['enabled'] is true %}
    location /webmail {
        include /etc/nginx/templates/mailu_proxy.tmpl;
        rewrite ^(/webmail)$ $1/ permanent;
        rewrite ^/webmail/(.*) /$1 break;
        auth_request /internal/auth/user;
        error_page 403 @sso_login;

        proxy_pass http://$webmail;
    }

    location /webmail/sso.php {
        include /etc/nginx/templates/mailu_proxy.tmpl;
        rewrite ^(/webmail)$ $1/ permanent;
        rewrite ^/webmail/(.*) /$1 break;
        auth_request /internal/auth/user;
        auth_request_set $user $upstream_http_x_user;
        auth_request_set $token $upstream_http_x_user_token;
        proxy_set_header X-Remote-User $user;
        proxy_set_header X-Remote-User-Token $token;
        error_page 403 @sso_login;

        proxy_pass http://$webmail;
    }
{% endif %}

    location /admin {
        include /etc/nginx/templates/mailu_proxy.tmpl;
        expires $mailu_expires;

        proxy_pass http://$admin;
    }

    location /admin/antispam {
        rewrite ^/admin/antispam/(.*) /$1 break;
        proxy_set_header X-Real-IP "";
        proxy_set_header X-Forwarded-For "";
        proxy_set_header X-Forwarded-By: "";
        auth_request /internal/auth/admin;

        proxy_pass http://$antispam;
        error_page 403 @sso_login;
    }

{% if mailu['roundcube']['rest_api_enabled'] is true %}
    location ~ /api {
        include /etc/nginx/proxy.conf;

        proxy_pass http://$admin;
    }
{% endif %}

    location /internal {
        internal;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        proxy_set_header Content-Length "";
        proxy_pass_request_body off;

        proxy_pass http://$admin;
    }

{% if mailu['OIDC']['enabled'] is true %}
    location = /oauth2/auth {
        internal;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
        # nginx auth_request includes headers but not body
        proxy_set_header Content-Length "";
        proxy_pass_request_body off;

        access_log /var/log/nginx/oauth2-proxy_oauth2_auth.access.log;
        error_log /var/log/nginx/oauth2-proxy_oauth2_auth.error.log debug;

        proxy_pass http://{{ containers['loopback_network_address'] }}:10110;
    }

    location /oauth2/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;

        access_log /var/log/nginx/oauth2-proxy_oauth2.access.log;
        error_log /var/log/nginx/oauth2-proxy_oauth2.error.log debug;

        proxy_pass http://{{ containers['loopback_network_address'] }}:10110;
    }

    location = /oauth2/sign_out {
        # Sign-out mutates the session, only allow POST requests
        if ($request_method != POST) {
            return 405;
        }

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;

        access_log /var/log/nginx/oauth2-proxy_oauth2_signout.access.log;
        error_log /var/log/nginx/oauth2-proxy_oauth2_signout.error.log debug;

        proxy_pass http://{{ containers['loopback_network_address'] }}:10110;
    }
{% endif %}
}

# Forwarding authentication server
server {
    listen 127.0.0.1:10100;

    # Variables for proxifying
    set $admin {{ containers['loopback_network_address'] }}:10102;

    location / {
      proxy_pass http://$admin/internal$request_uri;
    }
}
