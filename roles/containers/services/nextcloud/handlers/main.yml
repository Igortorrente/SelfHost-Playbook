---
- name: Ensure nextcloud is installed
  community.docker.docker_container_exec:
    container: nextcloud-fpm
    command: >
      php occ maintenance:install --database=pgsql --no-interaction --database-host=postgres
      --database-name={{ nextcloud['db_name'] }}
      --database-user={{ nextcloud['postgres_user'] }}
      --database-pass={{ nextcloud['postgres_password'] }}
      --admin-user={{ nextcloud['admin'] }}
      --admin-pass={{ nextcloud['admin_password'] }}
    user: www-data
    docker_host: unix:///run/user/{{ ansible_user_uid }}/docker.sock
  register: nextcloud_install
  failed_when: nextcloud_install.rc != 0

- name: Add missing indices to db
  community.docker.docker_container_exec:
    container: nextcloud-fpm
    command: php occ db:add-missing-indices
    user: www-data
    docker_host: unix:///run/user/{{ ansible_user_uid }}/docker.sock
  register: nextcloud_install
  failed_when: nextcloud_install.rc != 0

- name: Restart nextcloud container
  community.docker.docker_container:
    name: nextcloud-fpm
    state: started
    restart: yes
    env:
      PHP_UPLOAD_LIMIT: 50G
      PHP_MEMORY_LIMIT: 1G
      TZ: "{{ server['timezone'] }}"
    docker_host: unix:///run/user/{{ ansible_user_uid }}/docker.sock

- name: Enable systemd units
  ansible.builtin.systemd:
    name: "{{ item }}"
    scope: user
    enabled: true
    state: started
    daemon_reload: true
  loop:
    - cron_nextcloud.service
    - cron_nextcloud.timer

- name: Configure notify_push in nextcloud
  community.docker.docker_container_exec:
    container: nextcloud-fpm
    command: php occ notify_push:setup https://{{ server['network']['domain_name'] }}/push --no-interaction --ansi
    user: www-data
    docker_host: unix:///run/user/{{ ansible_user_uid }}/docker.sock
  register: notify_push_configure
  #changed_when: "'installed: false' in notify_push_configure.stdout"
  failed_when: notify_push_configure.rc != 0

- name: Configure user_oidc app
  community.docker.docker_container_exec:
    container: nextcloud-fpm
    command: >
      php occ user_oidc:provider
      --clientid=nextcloud
      --clientsecret={{ nextcloud['OIDC']['client_secret'] }}
      --discoveryuri=https://accounts.{{ server['network']['domain_name'] }}/realms/{{ keycloak['realm_name'] }}/.well-known/openid-configuration
      --unique-uid=0
      --mapping-uid=preferred_username
      --no-interaction --
      {{ nextcloud['OIDC']['identifier'] }}
    user: www-data
    docker_host: unix:///run/user/{{ ansible_user_uid }}/docker.sock
  register: user_oidc
  failed_when: user_oidc.rc != 0

- name: Disables multiple user backends
  community.docker.docker_container_exec:
    container: nextcloud-fpm
    command: php occ config:app:set --value=0 user_oidc allow_multiple_user_backends
    user: www-data
    docker_host: unix:///run/user/{{ ansible_user_uid }}/docker.sock
  register: allow_multiple_user_backends
  failed_when: allow_multiple_user_backends.rc != 0

- name: Configure richdocuments(Collabora Online) app
  community.docker.docker_container_exec:
    container: nextcloud-fpm
    command: php occ {{ item }}
    user: www-data
    docker_host: unix:///run/user/{{ ansible_user_uid }}/docker.sock
  register: richdocument
  failed_when: richdocument.rc != 0
  loop:
    - config:app:set richdocuments public_wopi_url --value="https://collaboraonline.{{ server['network']['domain_name'] }}/"
    - config:app:set richdocuments wopi_url --value="https://collaboraonline.{{ server['network']['domain_name'] }}/"
    - "{{ 'config:app:set richdocuments disable_certificate_verification --value=' + ('no' if nginx_proxy['certbot']['enabled'] else 'yes') }}"
    - config:app:set richdocuments wopi_allowlist --value="{{ loopback_net }}/24,{{ server['network']['ipv4'] }}"
    - richdocuments:activate-config
