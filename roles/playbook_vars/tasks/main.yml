---
- name: Workarround to ansible lazy evaluation.
  ansible.builtin.include_tasks: workaround.yml

- name: Get get the timezone information.
  ansible.builtin.slurp:
    src: "/etc/timezone"
  register: tz

- name: Set the server fact.
  ansible.builtin.set_fact:
    server:
      timezone: "{{ server['timezone'] | default(tz['content'] | b64decode | trim) }}"
      network:
        domain_name: "{{ server['network']['domain_name'] | default('example.com') }}"
        ipv4: "{{ server['network']['ipv4'] | default(server_ipv4) }}"
        ipv6: "{{ server['network']['ipv6'] | default(server_ipv6) }}"

- name: Set the containers fact.
  ansible.builtin.set_fact:
    containers:
      data_dir: "{{ containers['data_dir'] | default(ansible_user_dir + '/containers_data') }}"
      cache_dir: "{{ containers['cache_dir'] | default(ansible_user_dir + '/containers_cache') }}"
      config_dir: "{{ containers['config_dir'] | default(ansible_user_dir + '/containers_config') }}"
      logs_dir: "{{ containers['logs_dir'] | default(ansible_user_dir + '/containers_logs') }}"
      loopback_network_address: "{{ containers['loopback_network_address'] | default('10.0.0.1') }}"
      subnet: "{{ containers['subnet'] | default('192.168.203.0/24') }}"

- name: Generates postgres password if needed.
  ansible.builtin.set_fact:
    postgres:
      container_version: "{{ postgres['container_version'] | default('16-bookworm') }}"
      admin_user: "{{ postgres['admin_user'] | default('postgres') }}"
      admin_passwd: "{{ postgres['admin_passwd'] | default(postgres_passwd) }}"
      admin_db: "{{ postgres['admin_db'] | default('main') }}"

- name: Set Redis fact.
  ansible.builtin.set_fact:
    redis:
      container_version: "{{ redis['container_version'] | default('6-bookworm') }}"

- name: Sets nginx_proxy fact.
  ansible.builtin.set_fact:
    nginx_proxy:
      container_version: "{{ nginx_proxy['container_version'] | default('1.25') }}"
      certbot:
        enabled: "{{ nginx_proxy['certbot']['enabled'] | default(true) }}"
        container_version: "{{ nginx_proxy['certbot']['container_version'] | default('v1.32.2') }}"
        email: "{{ nginx_proxy['certbot']['email'] }}"

- name: Sets homer fact.
  ansible.builtin.set_fact:
    homer:
      enabled: "{{ homer['enabled'] | default(true) }}"

- name: Sets bind dns fact.
  ansible.builtin.set_fact:
    dns:
      enabled: "{{ dns['enabled'] | default(false) }}"
      container_version: "{{ dns['container_version'] | default('9.19') }}"
      AAAA_records: "{{ dns['AAAA_records'] | default(true) }}"

- name: Set fact with a list with all ssl domains.
  ansible.builtin.set_fact:
    ssl_domains_list: "{{ ssl_domains_list | default([]) + [item.domain] }}"
  loop:
    - { domain: "home.{{ server['network']['domain_name'] }}", enabled: "{{ homer['enabled'] }}" }
  when: item.enabled|bool
