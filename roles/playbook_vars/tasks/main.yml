---
- name: Workarround to ansible lazy evaluation.
  ansible.builtin.include_tasks: workaround.yml

- name: Get get the timezone information.
  ansible.builtin.slurp:
    src: "/etc/timezone"
  register: tz

- name: Set the server fact.
  ansible.builtin.set_fact:
    server:
      timezone: "{{ server['timezone'] | default(tz['content'] | b64decode | trim) }}"
      network:
        domain_name: "{{ server['network']['domain_name'] | default('example.com') }}"
        ipv4: "{{ server['network']['ipv4'] | default(server_ipv4) }}"
        ipv6: "{{ server['network']['ipv6'] | default(server_ipv6) }}"

- name: Set the containers fact.
  ansible.builtin.set_fact:
    containers:
      data_dir: "{{ containers['data_dir'] | default(ansible_user_dir + '/containers_data') }}"
      cache_dir: "{{ containers['cache_dir'] | default(ansible_user_dir + '/containers_cache') }}"
      config_dir: "{{ containers['config_dir'] | default(ansible_user_dir + '/containers_config') }}"
      logs_dir: "{{ containers['logs_dir'] | default(ansible_user_dir + '/containers_logs') }}"
      loopback_network_address: "{{ containers['loopback_network_address'] | default('10.0.0.1') }}"
      subnet: "{{ containers['subnet'] | default('192.168.203.0/24') }}"

- name: Generates postgres password if needed.
  ansible.builtin.set_fact:
    postgres:
      container_version: "{{ postgres['container_version'] | default('16-bookworm') }}"
      admin_user: "{{ postgres['admin_user'] | default('postgres') }}"
      admin_passwd: "{{ postgres['admin_passwd'] | default(postgres_passwd) }}"
      admin_db: "{{ postgres['admin_db'] | default('main') }}"

- name: Set Redis fact.
  ansible.builtin.set_fact:
    redis:
      container_version: "{{ redis['container_version'] | default('6-bookworm') }}"

- name: Sets nginx_proxy fact.
  ansible.builtin.set_fact:
    nginx_proxy:
      container_version: "{{ nginx_proxy['container_version'] | default('1.25') }}"
      certbot:
        enabled: "{{ nginx_proxy['certbot']['enabled'] | default(true) }}"
        container_version: "{{ nginx_proxy['certbot']['container_version'] | default('v1.32.2') }}"
        email: "{{ nginx_proxy['certbot']['email'] }}"

- name: Sets homer fact.
  ansible.builtin.set_fact:
    homer:
      enabled: "{{ homer['enabled'] | default(true) }}"
      container_version: "{{ homer['container_version'] | default('latest') }}"

- name: Sets up the admin_wireguard fact.
  ansible.builtin.set_fact:
    admin_wireguard:
      enabled: "{{ admin_wireguard['enabled'] | default(true) }}"
      address: "{{ admin_wireguard['address'] | default('20.0.0.1/24') }}"
      allowed_ip: "{{ admin_wireguard['allowed_ip'] | default('20.0.0.2/32') }}"
      listen_port: "{{ admin_wireguard['listen_port'] | default('51820') }}"

- name: Sets up mailu fact and generate passwords if needed.
  ansible.builtin.set_fact:
    mailu:
      enabled: "{{ mailu['enabled'] | default(true) }}"
      container_version: "{{ mailu['container_version'] | default('1.9') }}"
      postgres_user: "{{ mailu['postgres_user'] | default('mailu') }}"
      postgres_password: "{{ mailu['postgres_password'] | default(mailu_postgres_password) }}"
      db_name: "{{ mailu['db_name'] | default('mailu_db') }}"
      mail_domain: "{{ mailu['mail_domain'] | default(server['network']['domain_name']) }}"
      secret_key: "{{ mailu['secret_key'] | default(mailu_secret_key) }}"
      postmaster: "{{ mailu['postmaster'] | default('admin') }}"
      postmaster_password: "{{ mailu['postmaster_password'] | default(mailu_postmaster_password) }}"
      site_name: "{{ mailu['site_name'] | default('Example') }}"
      roundcube:
        enabled: "{{ mailu['roundcube']['enabled'] | default(true) if mailu['enabled'] else false }}"
        postgres_user: "{{ mailu['roundcube']['postgres_user'] | default('roundcube') }}"
        postgres_password: "{{ mailu['roundcube']['postgres_password'] | default(roundcube_postgres_password) }}"
        db_name: "{{ mailu['roundcube']['db_name'] | default('roundcube_db') }}"
      OIDC:
        enabled: "{{ mailu['OIDC']['enabled'] | default(true) if mailu['enabled'] else false }}"
        client_id: "{{ mailu['OIDC']['client_id'] | default('mailu') }}"
        client_secret: "{{ mailu['OIDC']['client_secret'] | default(mailu_client_secret) }}"
        button_name: "{{ mailu['OIDC']['button_name'] | default('Connect with Accounts Example.com') }}"
      services_mail:
        enabled: "{{ mailu['services_mail']['enabled'] | default(true) }}"
        username: "{{ mailu['services_mail']['username'] | default('no_reply') }}"
        password: "{{ mailu['services_mail']['password'] | default(services_mail_password) }}"
      fetchmail: "{{ mailu['fetchmail'] | default(false) }}"
      clamav: "{{ mailu['clamav'] | default(false) }}"

- name: Sets up services_mail fact.
  ansible.builtin.set_fact:
    services_mail:
      enabled: "{{ true if mailu['enabled'] and mailu['services_mail']['enabled'] else services_mail['enabled'] }}"
      smtp_securty: "{{ 'tls' if mailu['services_mail']['enabled'] else services_mail['smtp_securty'] }}"
      sender_name: "{{ mailu['services_mail']['username'] if mailu['services_mail']['enabled'] else services_mail['sender_name'] }}"
      smtp_auth_type: "{{ 'login' if mailu['services_mail']['enabled'] else services_mail['smtp_auth_type'] }}"
      smtp_host: "{{ 'mail.' + server['network']['domain_name'] if mailu['enabled'] and mailu['services_mail']['enabled'] else services_mail['smtp_host'] }}"
      mail_domain: "{{ mailu['mail_domain'] if mailu['services_mail']['enabled'] else services_mail['mail_domain'] }}"
      smtp_port: "{{ 465 if mailu['services_mail']['enabled'] else services_mail['smtp_port'] }}"
      smtp_name: "{{ mailu['services_mail']['username'] if mailu['services_mail']['enabled'] else services_mail['smtp_name'] }}"
      smtp_password: "{{ mailu['services_mail']['password'] if mailu['services_mail']['enabled'] else services_mail['smtp_password'] }}"

- name: Sets up the nextcloud fact and generate nextcloud passwords if needed.
  ansible.builtin.set_fact:
    nextcloud:
      enabled: "{{ nextcloud['enabled'] | default(true) }}"
      postgres_user: "{{ nextcloud['postgres_user'] | default('nextcloud') }}"
      postgres_password: "{{ nextcloud['postgres_password'] | default(nextcloud_postgres_password) }}"
      db_name: "{{ nextcloud['db_name'] | default('nextcloud_db') }}"

- name: Sets up the keycloak fact and generate keycloak passwords if needed.
  ansible.builtin.set_fact:
    keycloak:
      enabled: "{{ mailu['OIDC']['enabled'] }}"
      container_version: "{{ keycloak['container_version'] | default('23.0') }}"
      realm_name: "{{ keycloak['realm_name'] | default('main') }}"
      postgres_user: "{{ keycloak['postgres_user'] | default('keycloak') }}"
      postgres_password: "{{ keycloak['postgres'] | default(keycloak_postgres_password) }}"
      db_name: "{{ keycloak['db_name'] | default('keycloak_db') }}"
      admin: "{{ keycloak['admin'] | default('admin') }}"
      admin_password: "{{ keycloak['admin_password'] | default(keycloak_admin_password) }}"
      metrics: "{{ keycloak['metrics'] | default(false) }}"
      health: "{{ keycloak['health'] | default(false) }}"

- name: Sets bind dns fact.
  ansible.builtin.set_fact:
    dns:
      enabled: "{{ dns['enabled'] or mailu['enabled'] | default(false) }}"
      container_version: "{{ dns['container_version'] | default('9.19') }}"
      AAAA_records: "{{ dns['AAAA_records'] | default(true) }}"

- name: Set fact with a list with all ssl domains.
  ansible.builtin.set_fact:
    ssl_domains_list: "{{ ssl_domains_list | default([]) + [item.domain] }}"
    containers_etc_hosts: "{{ containers_etc_hosts | default({}) | combine({item.domain: server['network']['ipv4']}) }}"
  loop:
    - { domain: "home.{{ server['network']['domain_name'] }}", enabled: "{{ homer['enabled'] }}" }
    - { domain: "accounts.{{ server['network']['domain_name'] }}", enabled: "{{ keycloak['enabled'] }}" }
    - { domain: "mail.{{ server['network']['domain_name'] }}", enabled: "{{ mailu['enabled'] }}" }
    - { domain: "autoconfig.{{ server['network']['domain_name'] }}", enabled: "{{ mailu['enabled'] }}" }
    - { domain: "autodiscover.{{ server['network']['domain_name'] }}", enabled: "{{ mailu['enabled'] }}" }
  when: item.enabled|bool
