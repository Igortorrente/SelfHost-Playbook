---
- name: Main playbook.
  hosts: all

  vars_files:
    user_vars.yaml

  roles:
    - role: roles/playbook_vars/

    # This is at the beginning so that we can have access to all
    # passwords in case of anything goes wrong
    - role: roles/instalation_info

    - role: roles/system/ssh_hardening
      when: ssh_hardening['enabled']

    - role: roles/system/basic/

    - role: roles/system/vim
      when: optional_roles['vim']

    - role: roles/system/zsh
      when: optional_roles['zsh']

    - role: roles/system/wireguard
      when: admin_wireguard['enabled']

    - role: roles/system/container_setup/
      when: >
        dns['enabled'] or
        homer['enabled'] or
        keycloak['enabled'] or
        mailu['enabled'] or
        nextcloud['enabled'] or
        collabora_office['enabled'] or
        vaultwarden['enabled']

    - role: roles/containers/infra/redis/
      when: mailu['enabled'] or nextcloud['enabled']

    - role: roles/containers/infra/postgres/
      when: >
        keycloak['enabled'] or
        mailu['enabled'] or
        nextcloud['enabled'] or
        vaultwarden['enabled']

    - role: roles/containers/infra/nginx
      when: >
        dns['enabled'] or
        homer['enabled'] or
        keycloak['enabled'] or
        mailu['enabled'] or
        nextcloud['enabled'] or
        collabora_office['enabled'] or
        vaultwarden['enabled']

    - role: roles/containers/infra/bind9/
      when: dns['enabled']

    - role: roles/containers/services/homer
      when: homer['enabled']

    - role: roles/containers/infra/collabora_office
      when: collabora_office['enabled']

    - role: roles/containers/infra/keycloak/
      when: keycloak['enabled']

    - role: roles/containers/services/mailu/
      when: mailu['enabled']

    - role: roles/containers/services/nextcloud
      when: nextcloud['enabled']

    - role: roles/containers/services/vaultwarden
      when: vaultwarden['enabled']

    - role: roles/system/fail2ban
      when: optional_roles['fail2ban']

    - role: roles/system/unattended-upgrades
      when: unattended_upgrades['enabled']
